<project name="hyperion" default="jar" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:artifact="antlib:org.apache.maven.artifact.ant" basedir=".">

	<description>Hyperion</description>

	<!-- include properties file -->
	<property file="build.properties" />

	<!-- paths used for compilation and run  -->
	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>
	<path id="run.path.id">
		<path refid="lib.path.id" />
		<path location="${build.dir}/main" />
	</path>

	<target name="init">
		<tstamp />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- download Ivy from web site so that it can be used even without any special installation -->
	<target name="download-ivy" unless="skip.download">
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<!-- try to load ivy here from local ivy dir, in case the user has not already dropped
       it into ant's lib dir (note that the latter copy will always take precedence).
       We will not fail as long as local lib dir exists (it may be empty) and
       ivy is in at least one of ant's lib dir or the local lib dir. -->
	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="resolve" depends="install-ivy" description="--> retreive dependencies with ivy">
		<ivy:retrieve />
	</target>

	<target name="report" depends="resolve" description="--> generates a report of dependencies">
		<ivy:report todir="${build.dir}" />
	</target>

	<target name="compile" depends="init,resolve" description="compile the source ">
		<mkdir dir="${build.dir}/main" />

		<javac classpathref="lib.path.id" srcdir="${src.dir}/main" destdir="${build.dir}/main" optimize="on" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:unchecked" />
		</javac>

		<copy todir="${build.dir}/main">
			<fileset dir="${src.dir}/main" excludes="**/*.java" />
		</copy>
	</target>

	<target name="compile-test" depends="init,resolve" description="compile the source ">
		<mkdir dir="${build.dir}/main" />
		<mkdir dir="${build.dir}/test" />

		<javac classpathref="lib.path.id" srcdir="${src.dir}/main" destdir="${build.dir}/main" optimize="on" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		<javac classpathref="run.path.id" srcdir="${src.dir}/test" destdir="${build.dir}/test" optimize="on" debug="on" encoding="UTF-8">
			<compilerarg value="-Xlint:unchecked" />
		</javac>

		<copy todir="${build.dir}/test">
			<fileset dir="${src.dir}/main" excludes="**/*.java" />
			<fileset dir="${src.dir}/test" excludes="**/*.java" />
		</copy>
	</target>

	<target name="jar" depends="compile" description="generate the distribution">
		<jar jarfile="${dist.dir}/hyperion-${version}.jar" basedir="${build.dir}/main" />
	</target>

	<target name="jar-test" depends="compile-test" description="generate the distribution">
		<jar jarfile="${dist.dir}/hyperion-${version}-test.jar" basedir="${build.dir}/test" />
	</target>

	<target name="dist" depends="jar,jar-test,javadoc" description="generate the distribution">
		<jar jarfile="${dist.dir}/hyperion-${version}-sources.jar" basedir="${src.dir}/main" />
		<jar jarfile="${dist.dir}/hyperion-${version}-sources-test.jar" basedir="${src.dir}/test" />
		<jar jarfile="${dist.dir}/hyperion-${version}-javadoc.jar" basedir="${javadoc.dir}" />
	</target>

	<target name="clean" description="clean up">
		<delete dir="${test.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${lib.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${javadoc.dir}" />
	</target>

	<target name="test" depends="jar" description="Execute Unit Tests">
		<mkdir dir="${test.dir}" />
		<junit printsummary="yes" fork="yes" maxmemory="1024m">
			<sysproperty key="java.library.path" path="${lib.dir}" />
			<sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser" />
			<classpath refid="run.path.id" />

			<formatter type="xml" />
			<batchtest todir="${test.dir}">
				<fileset dir="${build.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${test.dir}">
			<fileset dir="${test.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" styledir="etc/" todir="${test.dir}" />
		</junitreport>
	</target>

	<target name="javadoc">
		<property name="windowtitle" value="feilong-core 1.0 API" />
		<property name="additionalparam" value="-encoding UTF-8 -charset UTF-8" />

		<javadoc destdir="${javadoc.dir}" windowtitle="${javadoc.windowtitle}" access="public" use="true" notree="false" nonavbar="false" noindex="false" splitindex="no" author="${javadoc.author}" version="${javadoc.version}" nodeprecatedlist="false" nodeprecated="false" classpathref="lib.path.id" charset="UTF-8" encoding="UTF-8" docencoding="UTF-8">
			<fileset dir="src/main">
				<include name="**/*.java" />
			</fileset>
			<link href="http://java.sun.com/javase/7/docs/api/" />
		</javadoc>
		<copy todir="${javadoc.dir}">
			<fileset dir="${src.dir}/main">
			</fileset>
		</copy>
	</target>

</project>